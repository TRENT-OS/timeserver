/*
 * Copyright (C) 2020, Hensoldt Cyber GmbH
 */

/*
 *  TimeServer CAmkES Component
 *
 *  to be used as:
 *
 *      #include "TimeServer/camkes/TimeServer.camkes"
 *
 *      TimeServer_COMPONENT_DEFINE(TimeServer_1)
 *      TimeServer_COMPONENT_DEFINE(TimeServer_2)
 *
 */

#pragma once

import <std_connector.camkes>;

#include <plat/timers.h>

import <if_OS_Timer.camkes>;

import <timers.camkes>;

#include "LibMacros/ForEach.h"


//------------------------------------------------------------------------------


#ifdef HARDWARE_TIMER_COMPONENT
    HARDWARE_TIMER_COMPONENT
#endif


//------------------------------------------------------------------------------


/*
 * Declare the TimeServer with a given type name:
 *
 *      TimeServer_COMPONENT_DEFINE(
 *          <name>
 *      )
 */
#define TimeServer_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        has   mutex             clientMux; \
        \
        emits TimerReady        timeServer_notify1; \
        emits TimerReady        timeServer_notify2; \
        emits TimerReady        timeServer_notify3; \
        emits TimerReady        timeServer_notify4; \
        emits TimerReady        timeServer_notify5; \
        emits TimerReady        timeServer_notify6; \
        emits TimerReady        timeServer_notify7; \
        emits TimerReady        timeServer_notify8; \
        provides if_OS_Timer    timeServer_rpc; \
        \
        attribute int timers_per_client = 4; \
        attribute int heap_size = 8192; \
        \
        HARDWARE_TIMER_INTERFACES \
        HARDWARE_TIMER_ATTRIBUTES \
        \
        composition { \
            HARDWARE_TIMER_COMPOSITION \
        } \
        \
        configuration { \
            HARDWARE_TIMER_CONFIG \
        } \
    }


//------------------------------------------------------------------------------

// Set a single connection; this is used internally
#define TimeServer_CLIENT_CONNECTOR( \
    _inst_, \
    _unused_, \
    _rpc_, \
    _evt_, \
    _num_) \
    \
    connection seL4RPCCall \
        _inst_ ## _rpc ## _num_ ( \
            from    _rpc_, \
            to      _inst_.timeServer_rpc \
        ); \
    connection seL4NotificationNative \
        _inst_ ## _evt ## _num_ ( \
            from    _inst_.timeServer_notify ## _num_, \
            to      _evt_ \
        );


/*
 * Assign all clients via this variadic macro:
 *
 *      TimeServer_INSTANCE_CONNECT_CLIENTS(
 *          <instance>,
 *          <client0>.<rpc>,  <client0>.<evt>,
 *          <client1>.<rpc>,  <client1>.<evt>
 *      )
 *
 */
#define TimeServer_INSTANCE_CONNECT_CLIENTS( \
    _inst_, \
    ...) \
    \
    FOR_EACH_2P(TimeServer_CLIENT_CONNECTOR,_inst_,UNUSED,__VA_ARGS__)


//------------------------------------------------------------------------------


/*
 * Configure the amount of timers a client can have:
 *
 *      TimeServer_INSTANCE_CONFIGURE(
 *          <instance>, <timers>
 *      )
 *
 */
#define TimeServer_INSTANCE_CONFIGURE( \
    _inst_, \
    _num_) \
    \
    _inst_.timers_per_client = _num_;


//------------------------------------------------------------------------------


// Assign a single badge; this is used internally
#define TimeServer_BADGE_ASSIGNER( \
    _unused0_, \
    _unused1_, \
    _rpc_, \
    _num_) \
    \
    _rpc_ ## _attributes = (100 + _num_);


/*
 * Assign all clients a badge, in the order in which they are connected to the
 * TimeServer instance via TimeServer_INSTANCE_CONNECT_CLIENTS():
 *
 *      TimeServer_CLIENT_ASSIGN_BADGE(
 *          <client_rpc>, <ID>
 *      )
 *
 * NOTE: IDs need to start at 101!
 *
 */
#define TimeServer_CLIENT_ASSIGN_BADGE( \
    _client_rpc_, \
    _val_) \
    \
    _client_rpc_ ## _attributes = _val_;


/*
 * Assign badges to a list of clients; badge IDs will start at 101 and then be
 * incremented. Make sure to pass clients in same order as they are passed
 * in the TimeServer_INSTANCE_CONNECT_CLIENTS() macro:
 *
 *      TimeServer_CLIENT_ASSIGN_BADGES(
 *          <client0_rpc>,
 *          <client1_rpc>,
 *          <client2_rpc>,
 *           ...
 *      )
 *
 * NOTE: Can take up to 8 clients.
 *
 */
#define TimeServer_CLIENT_ASSIGN_BADGES( \
    ...) \
    \
    FOR_EACH_1P(TimeServer_BADGE_ASSIGNER,UNUSED,UNUSED,__VA_ARGS__)
